/* build/Multiprotocol.pre */
extern void init(void);
extern uint32_t MProtocol_id;
extern uint32_t MProtocol_id_master;
extern uint32_t blink;
extern uint32_t last_signal;
extern uint16_t counter;
extern uint8_t channel;
extern uint8_t packet[40];
extern uint16_t Channel_data[16];
extern uint8_t Channel_AUX;
extern uint16_t Failsafe_data[16];
extern uint8_t cyrfmfg_id[6];
extern uint8_t rx_tx_addr[5];
extern uint8_t rx_id[5];
extern uint8_t phase;
extern uint16_t bind_counter;
extern uint8_t bind_phase;
extern uint8_t binding_idx;
extern uint16_t packet_period;
extern uint8_t packet_count;
extern uint8_t packet_sent;
extern uint8_t packet_length;
extern uint8_t hopping_frequency[50];
extern uint8_t *hopping_frequency_ptr;
extern uint8_t hopping_frequency_no;
extern uint8_t rf_ch_num;
extern uint8_t throttle;
extern uint8_t rudder;
extern uint8_t elevator;
extern uint8_t aileron;
extern uint8_t flags;
extern uint16_t crc;
extern uint8_t crc8;
extern uint16_t seed;
extern uint16_t failsafe_count;
extern uint16_t state;
extern uint8_t len;
extern uint8_t armed;
extern uint8_t arm_flags;
extern uint8_t arm_channel_previous;
extern const uint8_t CH_AETR[];
extern const uint8_t CH_TAER[];
extern const uint8_t CH_RETA[];
extern const uint8_t CH_EATR[];
extern uint8_t mode_select;
extern uint8_t protocol_flags;
extern uint8_t protocol_flags2;
extern uint8_t sub_protocol;
extern uint8_t protocol;
extern uint8_t option;
extern uint8_t cur_protocol[3];
extern uint8_t prev_option;
extern uint8_t prev_power;
extern uint8_t RX_num;
extern volatile uint8_t rx_buff[26];
extern volatile uint8_t rx_ok_buff[26];
extern volatile uint8_t discard_frame;
extern uint8_t pkt[29];
extern uint8_t pass;
extern uint8_t pktt[29];
extern volatile uint8_t tx_buff[96];
extern volatile uint8_t tx_head;
extern volatile uint8_t tx_tail;
extern uint8_t v_lipo1;
extern uint8_t v_lipo2;
extern uint8_t RX_RSSI;
extern uint8_t TX_RSSI;
extern uint8_t RX_LQI;
extern uint8_t TX_LQI;
extern uint8_t telemetry_link;
extern uint8_t telemetry_counter;
extern uint8_t telemetry_lost;
extern void_function_t remote_callback;
extern void setup(void);
extern void loop(void);
extern uint8_t Update_All(void);
static void update_channels_aux(void);
static void update_led_status(void);
extern inline void tx_pause(void);
extern inline void tx_resume(void);
static void protocol_init(void);
extern void update_serial_data(void);
extern void modules_reset(void);
extern void Mprotocol_serial_init(void);
extern void PPM_Telemetry_serial_init(void);
static void set_rx_tx_addr(uint32_t /*id*/);
static uint32_t random_id(uint16_t /*address*/, uint8_t /*create_new*/);
//extern void __vector_25(void);
//extern void __vector_23(void);
extern void SPI_Write(uint8_t /*command*/);
extern uint8_t SPI_Read(void);
extern void CYRF_WriteRegister(uint8_t /*address*/, uint8_t /*data*/);
static void CYRF_WriteRegisterMulti(uint8_t /*address*/, const uint8_t /*data*/[], uint8_t /*length*/);
static void CYRF_ReadRegisterMulti(uint8_t /*address*/, uint8_t /*data*/[], uint8_t /*length*/);
extern uint8_t CYRF_ReadRegister(uint8_t /*address*/);
extern uint8_t CYRF_Reset(void);
extern void CYRF_GetMfgData(uint8_t /*data*/[]);
extern void CYRF_SetTxRxMode(uint8_t /*mode*/);
extern void CYRF_ConfigRFChannel(uint8_t /*ch*/);
extern void CYRF_SetPower(uint8_t /*val*/);
extern void CYRF_ConfigCRCSeed(uint16_t /*crc*/);
extern void CYRF_ConfigSOPCode(const uint8_t */*sopcodes*/);
extern void CYRF_ConfigDataCode(const uint8_t */*datacodes*/, uint8_t /*len*/);
extern void CYRF_WritePreamble(uint32_t /*preamble*/);
extern void CYRF_ReadDataPacketLen(uint8_t /*dpbuffer*/[], uint8_t /*length*/);
static void CYRF_WriteDataPacketLen(const uint8_t /*dpbuffer*/[], uint8_t /*len*/);
extern void CYRF_WriteDataPacket(const uint8_t /*dpbuffer*/[]);
extern void CYRF_FindBestChannels(uint8_t */*channels*/, uint8_t /*len*/, uint8_t /*minspace*/, uint8_t /*min*/, uint8_t /*max*/);
extern const uint8_t DEVO_j6pro_sopcodes[][8];
static void CYRF_PROGMEM_ConfigSOPCode(const uint8_t */*data*/);
extern void InitFailsafe(void);
extern void InitChannel(void);
extern void reverse_channel(uint8_t /*num*/);
extern uint16_t convert_channel_ppm(uint8_t /*num*/);
extern uint16_t convert_channel_10b(uint8_t /*num*/);
extern uint8_t convert_channel_8b(uint8_t /*num*/);
extern int16_t convert_channel_16b_limit(uint8_t /*num*/, int16_t /*min*/, int16_t /*max*/);
extern int16_t convert_channel_16b_nolimit(uint8_t /*num*/, int16_t /*min*/, int16_t /*max*/);
extern uint8_t convert_channel_s8b(uint8_t /*num*/);
extern uint16_t limit_channel_100(uint8_t /*num*/);
extern void convert_channel_HK310(uint8_t /*num*/, uint8_t */*low*/, uint8_t */*high*/);
extern void convert_failsafe_HK310(uint8_t /*num*/, uint8_t */*low*/, uint8_t */*high*/);
extern uint16_t convert_channel_frsky(uint8_t /*num*/);
extern const uint8_t WFLY_sop_bind[];
extern const uint8_t WFLY_sop_data[];
extern const uint8_t WFLY_bind_packet[];
extern const uint8_t WFLY_init_vals[][2];
static void WFLY_cyrf_bind_config(void);
static void WFLY_cyrf_data_config(void);
static uint16_t WFLY_send_data_packet(void);
extern uint16_t ReadWFLY(void);
extern uint16_t initWFLY(void);
//static const uint8_t WK_sopcodes[8];
//static const uint8_t init_2801[];
//static const uint8_t init_2601[];
//static const uint8_t init_2401[];
extern uint8_t WK_last_beacon;
static void WK_add_pkt_crc(uint8_t /*init*/);
static void WK_build_bind_pkt(const uint8_t */*init*/);
static int16_t WK_get_channel(uint8_t /*ch*/, int32_t /*scale*/, int16_t /*center*/, int16_t /*range*/);
static void WK_build_data_pkt_2401(void);
static void WK_channels_6plus1_2601(uint8_t /*frame*/, int16_t */*_v1*/, int16_t */*_v2*/);
static void WK_channels_5plus1_2601(uint8_t /*frame*/, int16_t */*v1*/, int16_t */*v2*/);
static void WK_channels_heli_2601(uint8_t /*frame*/, int16_t */*v1*/, int16_t */*v2*/);
static void WK_build_data_pkt_2601(void);
static void WK_build_data_pkt_2801(void);
static void WK_build_beacon_pkt_2801(void);
static void wk2x01_cyrf_init(void);
static void WK_BuildPacket_2801(void);
static void WK_BuildPacket_2601(void);
static void WK_BuildPacket_2401(void);
extern uint16_t WK_cb(void);
extern uint16_t WK_setup(void);
extern const uint8_t j6pro_bind_sop_code[];
extern const uint8_t j6pro_data_code[];
static void j6pro_build_bind_packet(void);
static void j6pro_build_data_packet(void);
static void j6pro_cyrf_init(void);
static void cyrf_bindinit(void);
static void cyrf_datainit(void);
static void j6pro_set_radio_channels(void);
extern uint16_t ReadJ6Pro(void);
extern uint16_t initJ6Pro(void);
extern uint8_t RetrySequence;
extern uint32_t lastMulti;
extern uint8_t pktx[10];
extern uint8_t indx;
extern uint8_t frame[18];
static void multi_send_header(uint8_t /*type*/, uint8_t /*len*/);
static void multi_send_status(void);
extern void DSM_frame(void);
extern void frskySendStuffed(void);
extern void frsky_check_telemetry(uint8_t */*pkt*/, uint8_t /*len*/);
extern void init_frskyd_link_telemetry(void);
extern void frsky_link_frame(void);
extern void TelemetryUpdate(void);
extern void Serial_write(uint8_t /*data*/);
extern void initTXSerial(uint8_t /*speed*/);
//extern void __vector_26(void);
extern int16_t map16b(int16_t /*x*/, int16_t /*in_min*/, int16_t /*in_max*/, int16_t /*out_min*/, int16_t /*out_max*/);
extern int16_t map(int16_t /*x*/, int16_t /*in_min*/, int16_t /*in_max*/, int16_t /*out_min*/, int16_t /*out_max*/);
extern uint16_t MillisPrecount;
extern uint16_t lastTimerValue;
extern uint32_t TotalMicros;
extern uint32_t TotalMillis;
extern uint8_t Correction;
extern uint32_t micros(void);
extern uint32_t millis(void);
extern void delayMilliseconds(unsigned long /*ms*/);
extern void delayMicroseconds(unsigned int /*us*/);
extern uint8_t sop_col;
extern uint8_t DSM_num_ch;
extern uint8_t ch_map[14];
extern const uint8_t DSM_ch_map_progmem[][14];
extern const uint8_t DSM_pncodes[5][8][8];
static void DSM_read_code(uint8_t */*buf*/, uint8_t /*row*/, uint8_t /*col*/, uint8_t /*len*/);
static uint8_t DSM_get_pn_row(uint8_t /*channel*/);
extern const uint8_t DSM_init_vals[][2];
extern const uint8_t DSM_data_vals[][2];
static void DSM_cyrf_config(void);
static void DSM_build_bind_packet(void);
static void DSM_initialize_bind_phase(void);
static void DSM_cyrf_configdata(void);
static void DSM_update_channels(void);
static void DSM_build_data_packet(uint8_t /*upper*/);
static void DSM_set_sop_data_crc(void);
static void DSM_calc_dsmx_channel(void);
static uint8_t DSM_Check_RX_packet(void);
extern uint16_t ReadDsm(void);
extern uint16_t initDsm(void);
static void DEVO_scramble_pkt(void);
static void DEVO_add_pkt_suffix(void);
static void DEVO_build_beacon_pkt(uint8_t /*upper*/);
static void DEVO_build_bind_pkt(void);
static void DEVO_build_data_pkt(void);
static void DEVO_cyrf_set_bound_sop_code(void);
extern const uint8_t DEVO_init_vals[][2];
static void DEVO_cyrf_init(void);
static void DEVO_set_radio_channels(void);
static void DEVO_BuildPacket(void);
extern uint16_t devo_callback(void);
extern uint16_t DevoInit(void);
